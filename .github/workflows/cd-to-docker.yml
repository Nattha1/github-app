name: 'CD Pipeline for Web App'

on:
  push:
    branches:
      - main

jobs:
  build-and-save-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t myapp:latest .

      - name: Save Docker image as tar
        run: |
          docker save -o myapp.tar myapp:latest

      - name: Upload Docker image tar file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp-image
          path: myapp.tar

  deploy-to-server:
    runs-on: ubuntu-latest
    needs: build-and-save-docker-image
    steps:
      - name: Download Docker image tar file
        uses: actions/download-artifact@v4
        with:
          name: myapp-image

      - name: Copy Docker image to server
        run: |
          scp -i ${{ secrets.SSH_PRIVATE_KEY }} myapp.tar superuser@103.91.190.205:C:\Users\mint0

      - name: Deploy Docker image on server
        run: |
          ssh -i ${{ secrets.SSH_PRIVATE_KEY }} superuser@103.91.190.205 << 'EOF'
          docker load -i C:\Users\mint0\myapp.tar
          docker rm -f myapp_container || true
          docker run --restart=always -d --name myapp_container -p 80:3000 myapp:latest
          EOF
